name: push to swarm

on:
  push:
    branches:
      - main
      - development
      - staging
#env:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set vars per branch
        id: vars
        run: |
          if [ "$GITHUB_REF_NAME" == 'main' ]; then
              echo "REACT_APP_BEE_URL=https://bee-1.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "REACT_APP_BEE_DEBUG_URL=https://bee-1.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "REACT_APP_FAIROS_URL=https://fairos.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "REACT_APP_BLOCKCHAIN_INFO=GOERLI" >> "$GITHUB_ENV"
              echo "REACT_APP_ENVIRONMENT=GOERLI" >> "$GITHUB_ENV"
              echo "REACT_APP_WEB3_MODAL_PROJECT_ID=${{ secrets.REACT_APP_WEB3_MODAL_PROJECT_ID }}" >> "$GITHUB_ENV"
              echo "REACT_APP_ALCHEMY_API_KEY=${{ secrets.REACT_APP_ALCHEMY_API_KEY }}" >> "$GITHUB_ENV"
              echo "PURGE_URL=https://app.fairdrive.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "SWARM_URL=https://gateway.fairdatasociety.org/proxy/" >> "$GITHUB_ENV"
              echo "SIGNER=SIGNER_$GITHUB_REF_NAME" >> "$GITHUB_ENV"
              echo "DEPLOYMENT=." >> "$GITHUB_ENV"
          elif [ "$GITHUB_REF_NAME" == 'development' ]; then
              echo "REACT_APP_BEE_URL=https://bee-1.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "REACT_APP_BEE_DEBUG_URL=https://bee-1.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "REACT_APP_FAIROS_URL=https://fairos.dev.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "REACT_APP_BLOCKCHAIN_INFO=GOERLI" >> "$GITHUB_ENV"
              echo "REACT_APP_ENVIRONMENT=GOERLI" >> "$GITHUB_ENV"
              echo "REACT_APP_WEB3_MODAL_PROJECT_ID=${{ secrets.REACT_APP_WEB3_MODAL_PROJECT_ID }}" >> "$GITHUB_ENV"
              echo "REACT_APP_ALCHEMY_API_KEY=${{ secrets.REACT_APP_ALCHEMY_API_KEY }}" >> "$GITHUB_ENV"
              echo "PURGE_URL=https://app.fairdrive.dev.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "SWARM_URL=https://gateway.dev.fairdatasociety.org/proxy/" >> "$GITHUB_ENV"
              echo "SIGNER=SIGNER_$GITHUB_REF_NAME" >> "$GITHUB_ENV"
              echo "DEPLOYMENT=.dev." >> "$GITHUB_ENV"
          elif [ "$GITHUB_REF_NAME" == 'staging' ]; then
              echo "REACT_APP_BEE_URL=https://bee-1.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "REACT_APP_BEE_DEBUG_URL=https://bee-1.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "REACT_APP_FAIROS_URL=https://fairos.staging.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "REACT_APP_BLOCKCHAIN_INFO=GOERLI" >> "$GITHUB_ENV"
              echo "REACT_APP_ENVIRONMENT=GOERLI" >> "$GITHUB_ENV"
              echo "REACT_APP_WEB3_MODAL_PROJECT_ID=${{ secrets.REACT_APP_WEB3_MODAL_PROJECT_ID }}" >> "$GITHUB_ENV"
              echo "REACT_APP_ALCHEMY_API_KEY=${{ secrets.REACT_APP_ALCHEMY_API_KEY }}" >> "$GITHUB_ENV"
              echo "PURGE_URL=https://fairos.staging.fairdatasociety.org" >> "$GITHUB_ENV"
              echo "SWARM_URL=https://gateway.dev.fairdatasociety.org/proxy/" >> "$GITHUB_ENV"
              echo "SIGNER=SIGNER_$GITHUB_REF_NAME" >> "$GITHUB_ENV"
              echo "DEPLOYMENT=.staging." >> "$GITHUB_ENV"
          fi
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: install
        run: npm ci
      - name: copy NEXT vars to .env
        run: |
          env |grep 'REACT_' > .env
      - name: build
        run: npm run build
        env:
          CI: false
      - name: Upload
        id: swarm-upload
        uses: ethersphere/swarm-actions/upload-dir@latest
        with:
          bee-url: ${{ env.SWARM_URL }}
          dir: ./build
          index-document: index.html
          timeout: 200000
      - name: update feed
        id: swarm-feed
        uses: ethersphere/swarm-actions/write-feed@latest
        with:
          bee-url: ${{ env.SWARM_URL }}
          reference: ${{ steps.swarm-upload.outputs.reference }}
          topic: create
          signer: ${{ secrets[env.SIGNER] }}
      - name: get CID
        id: swarm-cid
        uses: ethersphere/swarm-actions/reference-to-cid@latest
        with:
          reference: ${{ steps.swarm-feed.outputs.reference }}
      - name: print
        run: |
          echo "upload ref: " ${{ steps.swarm-upload.outputs.reference }}
          echo "feed ref: " ${{ steps.swarm-feed.outputs.reference }}
          echo "CID: " ${{ steps.swarm-cid.outputs.cid }}
          echo 'Feed Manifest: ${{ steps.swarm-feed.outputs.manifest }}'
      - name: purge cache
        env:
          TOKEN: '${{ secrets.purge_token }}'
        run: |
          curl -s ${{ env.PURGE_URL }}/deploy/purge?token=${{ secrets.purge_token }} -H "site: create${{ env.DEPLOYMENT }}fairdatasociety.org" -H "uri: "
